# docker-compose.override.yml
# This file provides development-specific overrides for docker-compose.yml
# It enables bind mounting of local source code for faster iteration.
services:
  outline:
    volumes:
      # Mount local '.' dir (current working dir /code/outline) to '/opt/outline' in container
      # Changes made locally will be reflected inside the container immediately.
      - .:/opt/outline
      # Prevent the node_modules directory inside the container from being overwritten
      # by the (potentially non-existent or incompatible) host node_modules.
      # This ensures the container uses the modules installed during the image build.
      - /opt/outline/node_modules
      # If your base docker-compose.yml defines a named volume for persistent data
      # (like 'storage-data'), you might need to uncomment and adjust the line below
      # to ensure it's still used. Check your docker-compose.yml.
      # - storage-data:/var/lib/outline/data

    # Override the default command to run the development server (e.g., using nodemon).
    # This requires adding a "dev" script to your package.json, like:
    # "scripts": {
    #   "dev": "nodemon --watch server --watch shared --ext js,ts,json --exec yarn start:dev",
    #   ...
    # }
    # You also need to add nodemon as a dev dependency: yarn add -D nodemon
    command: yarn dev

    # Optional: If port mapping (e.g., "3000:3000") is defined in the base
    # docker-compose.yml and you handle proxying/access externally (like via Traefik/Nginx),
    # you can uncomment the line below to remove the direct port mapping.
    # ports: []
