services:
  outline:
    build:
      context: ./
      dockerfile: Dockerfile # Use the Dockerfile inside ./outline
    env_file:
      - .env
    ports:
      - "250:3000" # Map host port 250 to container port 3000
    volumes:
      - storage-data:/var/lib/outline/data # Persistent storage [5]
    depends_on:
      postgres:
        condition: service_healthy # Wait for postgres to be ready
      redis:
        condition: service_healthy # Wait for redis to be ready
    # Connect outline service to BOTH the external hunternet AND the default internal network
    networks:
      - hunternet # For external access via port 250
      - default   # For internal communication with postgres and redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    expose:
      - "6379" # Only expose internally to the default network
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # No 'networks' section here - it will only join the 'default' network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    env_file:
      - .env # Load DB credentials from .env in the same directory as docker-compose.yml
    expose:
      - "5432" # Only expose internally to the default network
    volumes:
      - database-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'user'       # Replace with your actual user if different
      POSTGRES_PASSWORD: 'pass'   # Replace with your actual password
      POSTGRES_DB: 'outline'    # Replace with your actual db name if different
    healthcheck:
      # Use the service name 'postgres' as host, which resolves on the default network
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # No 'networks' section here - it will only join the 'default' network
    restart: unless-stopped

volumes:
  storage-data:
  database-data:
  redis-data:

networks:
  hunternet:
    external: true # Use the pre-existing 'hunternet' network
